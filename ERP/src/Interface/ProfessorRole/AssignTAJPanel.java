/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ProfessorRole;

import Business.College.Program;
import Business.Courses.Courses;
import Business.Organization.CollegeOrganization;
import Business.Role.StudentRole;
import Business.Role.TARequest;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karan
 */
public class AssignTAJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AssignTAJPanel
     */
    JPanel userProcessContainer;
    CollegeOrganization organization;
    UserAccount userAccount;
    Program program;
    String uname;

    AssignTAJPanel(JPanel userProcessContainer, Program program, UserAccount userAccount, CollegeOrganization organization, String username) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.program = program;
        this.userAccount = userAccount;
        this.organization = (CollegeOrganization) organization;
        this.uname = username;
        populateCourses();
        populateStudents();
        populateTable();
        populateRequest();

        tblTA.getTableHeader().setFont(new Font("Tahoma", Font.CENTER_BASELINE, 18));

        tblTARequest.getTableHeader().setFont(new Font("Tahoma", Font.CENTER_BASELINE, 18));

    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblTA.getModel();
        model.setRowCount(0);

        //for (Program pd : .getPD().getDirectory()) {
        Courses cr = (Courses) cmbCousreName.getSelectedItem();
        Object[] row = new Object[3];
        for (UserAccount ua : cr.getTeachingAssistant()) {

            row[0] = ua;
            row[1] = cr.getCourseName();
            row[2] = cr.getProgram().getName();
            model.addRow(row);
        }
    }

    public void populateRequest() {
        DefaultTableModel model = (DefaultTableModel) tblTARequest.getModel();
        model.setRowCount(0);

        //for (Program pd : .getPD().getDirectory()) {
        Courses cr = (Courses) cmbCousreName.getSelectedItem();
        Object[] row = new Object[4];
        for (TARequest tt : cr.getRequests()) {

            row[0] = tt.getUa().getEmployee().getName();
            row[1] = tt.getCourse().getCourseName();
            row[2] = tt.getProgram().getName();
            row[3] = tt.getStatus();
            model.addRow(row);
        }
    }

    public void populateCourses() {
        cmbCousreName.removeAllItems();
        //CourseDirectory cd = program.getCourses();
        for (Program pd : organization.getPD().getDirectory()) {
            for (Courses c : pd.getCourses().getCourseList()) {
                if (c.getProfessor().getUsername().equals(uname) && c.getApprovalStatus().equals("Approved")) {
                    cmbCousreName.addItem(c);
                }
            }
        }
    }

    public void populateStudents() {
        cmbStudentsName.removeAllItems();
        /*for(Program pd : organization.getPD().getDirectory()){
        for (Courses c : pd.getCourses().getCourseList()) {
            for (UserAccount ua : c.getStudents()) {
                if (c.getCourseName().equals(cmbCousreName.getSelectedItem())) {
                    cmbStudentsName.addItem(ua);
                }
            }
        }

 }*/
        for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
            if (ua.getRole() instanceof StudentRole) {
                cmbStudentsName.addItem(ua);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAssignTA = new javax.swing.JButton();
        cmbCousreName = new javax.swing.JComboBox();
        cmbStudentsName = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTA = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTARequest = new javax.swing.JTable();
        backbtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Assign Teaching Assistant");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Course Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Select TA:");

        btnAssignTA.setBackground(new java.awt.Color(51, 153, 255));
        btnAssignTA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAssignTA.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignTA.setText("Assignment Request");
        btnAssignTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignTAActionPerformed(evt);
            }
        });

        cmbCousreName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCousreNameActionPerformed(evt);
            }
        });
        cmbCousreName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbCousreNamePropertyChange(evt);
            }
        });

        cmbStudentsName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStudentsNameActionPerformed(evt);
            }
        });
        cmbStudentsName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbStudentsNamePropertyChange(evt);
            }
        });

        tblTA.setAutoCreateRowSorter(true);
        tblTA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblTA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "TA", "Course", "Program"
            }
        ));
        tblTA.setRowHeight(20);
        jScrollPane1.setViewportView(tblTA);

        tblTARequest.setAutoCreateRowSorter(true);
        tblTARequest.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblTARequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "TA", "Course", "Program", "Status"
            }
        ));
        tblTARequest.setRowHeight(20);
        jScrollPane2.setViewportView(tblTARequest);

        backbtn.setBackground(new java.awt.Color(51, 153, 255));
        backbtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backbtn.setForeground(new java.awt.Color(255, 255, 255));
        backbtn.setText("<<Back");
        backbtn.setToolTipText("");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(31, 31, 31)
                                    .addComponent(cmbStudentsName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbCousreName, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnAssignTA)
                            .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCousreName, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStudentsName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(btnAssignTA, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backbtn)
                .addContainerGap(125, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCousreNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCousreNameActionPerformed
        // TODO add your handling code here:
        return;
        /*        Object obj = evt.getSource();
        if (obj == cmbCousreName) {
            cmbStudentsName.removeAllItems();
for(Program pd : organization.getPD().getDirectory()){
            for (Courses c : pd.getCourses().getCourseList()) {
                for (UserAccount ua : c.getStudents()) {
                    String courseName = String.valueOf(cmbCousreName.getSelectedItem());
                    if (c.getCourseName().equals(courseName)) {
                        cmbStudentsName.addItem(ua);
                    }
                }
            }
}
        }
         */
    }//GEN-LAST:event_cmbCousreNameActionPerformed

    private void cmbCousreNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbCousreNamePropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbCousreNamePropertyChange

    private void cmbStudentsNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStudentsNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbStudentsNameActionPerformed

    private void cmbStudentsNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbStudentsNamePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbStudentsNamePropertyChange

    private void btnAssignTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignTAActionPerformed
        // TODO add your handling code here:
        //CourseDirectory cd = program.getCourses();
        Courses ca = (Courses) cmbCousreName.getSelectedItem();
        UserAccount usera = (UserAccount) cmbStudentsName.getSelectedItem();
        TARequest tar = ca.addRequest(ca.getProgram(), ca, usera);
        JOptionPane.showMessageDialog(null, "Teaching assistant User Account requested");
        populateTable();
        populateRequest();
    }//GEN-LAST:event_btnAssignTAActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);

        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageCourseProfJPanel panel = (ManageCourseProfJPanel) component;
        panel.populateTable();
        panel.populateFeeds();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JButton btnAssignTA;
    private javax.swing.JComboBox cmbCousreName;
    private javax.swing.JComboBox cmbStudentsName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTA;
    private javax.swing.JTable tblTARequest;
    // End of variables declaration//GEN-END:variables
}
